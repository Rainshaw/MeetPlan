# Generated by Django 2.2.5 on 2020-02-11 16:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('identity_id', models.CharField(db_index=True, help_text='职工号\\学号', max_length=11, primary_key=True, serialize=False, unique=True)),
                ('user_name', models.CharField(help_text='姓名', max_length=100)),
                ('email', models.EmailField(blank=True, help_text='电子邮件', max_length=254, null=True)),
                ('is_active', models.BooleanField(default=False, help_text='是否激活')),
                ('is_teacher', models.BooleanField(default=False, help_text='是否为教职工')),
                ('gender', models.SmallIntegerField(choices=[(0, '未知'), (1, '男'), (2, '女')], default=0, help_text='性别')),
                ('telephone', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('user_img', models.ImageField(default=None, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
        ),
    ]
